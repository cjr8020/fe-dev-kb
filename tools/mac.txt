
	************
		OSX
	************

switch control and command keys in keyboard prefs?


Keyboard shortcuts

ctrl-shift-power			lock screen
cmnd-space					spotlight
F4							launchpad
cmnd-W						close window

sh-cmd-3					screenshot entire screen (into PNG on desktop)
ctrl-sh-cmd-3				screenshot entire screen into clipboard
sh-cmd-4					screenshot selection (into PNG on desktop)
ctrl-sh-cmd-4				screenshot selection into clipboard

power (1.5 sec)				get shutdown/restart dialog
power (5 sec)				force shutdown

ctrl-cmd-power				force restart
ctrl-opt-cmd-power			force turn it off

sh-opt-cmd-power			sleep
sh-cmd-Q					logout
sh-opt-cmd-Q				logout without dialog

cmd-opt-D					hide/show Dock

app switcher
------------

cmd-Tab						switch between running apps
cmd-Tab, when on app, hold Alt (opt), let go of Cmd
							switch to minimized or hidden app.

3 finger swipe up			show multiple desktops
3 finger swipe left/right	switch between multiple desktops

finder
-------

cmd-sh-.					toggle show|hide hidden files/folders


--------------------------------------------------------------------------------
iTerm shortcuts
---------------
shortcuts
	https://gist.github.com/squarism/ae3613daf5c01a98ba3a


opt-space 					navigate from current to iTerm and back
command-,					settings

cmd-T 						new tab
cmd-N  						new window
cmd-D 						split veritically with current profile
cmd-enter 					toggle full screen
cmd-/ 						find cursor


fn-> arrow 					go to end of the line
fn-< arrow 					go to start of the line

cmd-arrow					switch tabs
alt-cmd 					swtich windows							


cmd-opt-arrow 				navigate among split panes
cmd-[ and cmd-]
alt-number
							

cmd-shift-enter
					"maximize" the current pane--hiding all others in that tab
					same command restores the hidden panes.

instant replay
	To enable, press cmd-opt-B
	Once you are in instant replay mode, you can use the left and right arrow keys to navigate back and forward through time. Esc exits instant replay mode. By default, each session uses up to 4MB to save its instant replay history, and this can be adjusted under Preferences > General > Instant Replay uses __ MB per session.

	Another benefit of Instant Replay is that it shows you the exact time that something appeared on your screen down to the second. This is useful when trying to figure out when an error occurred, for example.


cmd-F
	find on page

	tab
	shift-tab
		expand the select to the right or left

opt-enter
	paste the current selection

cmd-;
	autocomplete
	Just type the start of any word that has ever appeared in your window and then Cmd-; will pop open a window with suggestions. 



================================================================================

	oh-my-zsh - iTerm2 - solarized
	******************************

https://gist.github.com/ZenLulz/c812f70fc86ebdbb189d9fb82f98197e

$ brew cask install iterm2

$ sh -c "$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"

$ vi ~/.zshrc

ZSH_THEME="agnoster"

Install the required fonts
--------------------------

We need to provide specific fonts for iTerm2 to properly handle the theme agnoster. For that purpose, we are going to install the Powerline fonts.

# Cloning
git clone https://github.com/powerline/fonts.git

# Installation
cd fonts
./install.sh

# Clean up
cd ..
rm -rf fonts

Apply the newly-installed fonts
--------------------------------

Open the preferences of iTerm2 (cmd+,) and click on the tab Profiles then Text 
and finally click on the button "Change font" to select 

	12pt Meslo LG S DZ Regular for Powerline

Configure the colors set in iTerm2
-----------------------------------

Open the preferences of iTerm2 (cmd+,) and click on the tab 
Profiles then Colors and finally click on the dropdown list Color Presets.... 
Select the item Solarized Dark.


================================================================================

	iTerm2 V3
	*********







================================================================================

	Sublime on OSX
	**************

Usage
Open Terminal at File Press ctrl+shift+t on Windows and Linux, or cmd+shift+t on OS X
Open Terminal at Project Folder Press ctrl+alt+shift+t on Windows and Linux, or cmd+alt+shift+t on OS X

Preferences > Package Settings > Terminal > Settings - User

{
    "terminal": "iTerm2-v3.sh",
    "parameters": ["--open-in-tab"]
}

================================================================================

	Mac OS X auto start on login
	****************************

/System/Library/LaunchAgents
               /LaunchDaemons

/Library/LaunchAgents
        /LaunchDaemons

~/Library/LaunchAgents

================================================================================

	launch Cisco AnyConnect CLI
	***************************

Assuming /opt/cisco/anyconnect/bin/vpnagentd is running

/opt/cisco/anyconnect/bin/vpn -s connect HOST	

printf 'USERNAME\nPASSWORD\ny' | /opt/cisco/anyconnect/bin/vpn -s connect HOST	

to disconnect:

/opt/cisco/anyconnect/bin/vpn disconnect

================================================================================

	homebrew
	********

Install
--------

$ /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
$ brew install [package]
$ brew install wget
$ brew analytics off

uninstall 
---------
ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/uninstall)"


cask
-----
$ brew update
$ brew tap caskroom/cask
$ brew install brew-cask-completion

update and upgrade
------------------
$ brew update && brew upgrade brew-cask-completion && brew cleanup && brew cask cleanup


================================================================================

	multiple version of Java JDK
	****************************

install homebrew cask if you haven't
---------------------
$ brew update
$ brew tap caskroom/cask
$ brew install brew-cask-completion
$ brew tap caskroom/versions // allow cask to lookup versions


list java versions
-------------------

$ brew search java

$ brew cask info java8
$ brew cask info java  // latest

install jEnv
-------------

$ brew install jenv

Add to your .zshrc:

# jEnv
export PATH=$HOME/.jenv/bin:$PATH
if which jenv > /dev/null; then eval "$(jenv init -)"; fi

$ source ~/.zshrc

install JDK(s)
--------------

$ brew cask install java8

add java version to jEnv
------------------------

$ jenv add /Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/

$ jenv versions   // shows versions added to jEnv
  system
  1.8
  1.8.0.181
* oracle64-1.8.0.181 (set by /Users/craiskin/.jenv/version)

(*) shows the active version

You can also configure a `local` version per directory, or
`shell` version per shell.

switching java version with jEnv
--------------------------------

$ jenv global 1.8
$ jenv local  1.8  // per directory
$ jenv shell  1.8  // per shell


make Maven work with the Java version specified by jEnv
-------------------------------------------------------

$ mvn -version

$ echo ‘JAVA_HOME=$(/usr/libexec/java_home -v $(jenv version-name))’ >> ~/.mavenrc
$ source ~/.mavenrc


jEnv Usage
==============

List managed JDKs

$ jenv versions
  system
  oracle64-1.6.0.39
* oracle64-1.7.0.11 (set by /Users/hikage/.jenv/version)

Configure global version

$ jenv global oracle64-1.6.0.39

Configure local version (per directory)

$ jenv local oracle64-1.6.0.39

Configure shell instance version

$ jenv shell oracle64-1.6.0.39

================================================================================

	Maven
	*****

download apache-maven-bin....tar.gz
unpack in finder

	$ rm Downloads/apache-maven*bin.tar.gz
	$ sudo chown -R root:wheel Downloads/apache-maven*
	$ sudo mv apache-maven* /opt
	$ cd /opt
	$ sudo ln -s apache-maven-x.x.x  apache-maven

zshrc

	# Java
	export JAVA_HOME=$(/usr/libexec/java_home -v $(jenv version-name))


	# Maven
	export M2_HOME=/opt/apache-maven
	export PATH=$PATH:$M2_HOME/bin


================================================================================

	@ in ls -l   extended attributes
	********************************

use `xattr` to view and modify

	xattr -l <file> 		# list the names of all attributes
	xattr -w <attr-name> <attr-value> <file>  # set
	xattr -d <attr-name> <file>  # deletes attr-name
	xattr -c <file> 		# deletes all xattrs
	xattr -h 				# prints help


com.apple.quarantine

	xattr is to prompt ask for user permission to run first time.

================================================================================


