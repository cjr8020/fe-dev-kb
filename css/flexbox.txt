
***********

	FlexBox

***********

Since flexbox is a whole module and not a single property, it involves a lot of things including its whole set of properties. Some of them are meant to be set on the container (parent element, known as “flex container”) whereas the others are meant to be set on the children (said “flex items”).


flexbox layout
-------------------------

"regular" (no flexbox) is based on both block and inline flow directions.

Flex layout is based on "flex-flow directions".

	main size
		- main start
		- main end 

	cross size
		- cross start
		- cross end


Items are laid out following 

	either the main axis (from main-start to main-end)
	or the cross axis (from cross-start to cross-end)



Flex container
---------------

Parent (flex container) properties:

	- display
	- flex-direction
	- flex-wrap
	- flex-flow
	- justify-content
	- align-items
	- align-content






display
--------------------------


	.file-upload-with-progress-container {
	  margin: 1rem;
	  display: flex;
	  justify-content: center;
	}


flex-direction
-------------------------- 


flex-wrap
-------------------------- 


flex-flow
-------------------------- 


justify-content
-------------------------- 


align-items
-------------------------- 


align-content
--------------------------





	Properties for the Children (Flex Items)
	----------------------------

		- order
		- flex-grow
		- flex-shrink
		- flex-basis
		- flex
		- align-self




order
------------------


flex-grow
------------------

	defines the ability for a flex item to grow if necessary.
	accepts a unitless value that serves as a proportion.

	dictates the amount of the available space inside the flex container
	the item should take up 

		flex-grow: 1;  

				if all items set to 1, the remaining space in the container 
				is distributed equally to all children.

		flex-grow: 2;  for one of the children
									 the remaining space would take 2x as the others.


	e.g.

	<li style="flex-grow: 2;"></li>


flex-shrink
------------------


flex-basis
------------------


	this defines the default size of an element before
	the remaining space is distributed.

	It can be a lenght - 20%  5rem  - or a keyword.

	E.g.

	.item {
	  flex-basis:  | auto; /* default auto */
	}

	The auto keyword means "look at my width or height property"

	content

		the content keyword means "size it based on the item's content".


	if set to 0, the extra space around content isn't factored in.
	if set to auto, the extra space is distributed based on it's flex-grow value.


flex
------------------



align-self
------------------

	aligning specific Flex items


applying flexbox to <nav>
--------------------------

nav only has one child .. so applying flexbox styling to nav won't make 
much of a diff.
should then apply this <ul> instead ... 




	
:nth-child()
*************************

The :nth-child() CSS pseudo-class matches elements based on their position in a group of siblings.


/* Selects the second <li> element in a list */
li:nth-child(2) {
  color: lime;
}


================================================================================

	distance between flexbox items
	------------------------------

https://stackoverflow.com/questions/20626685/better-way-to-set-distance-between-flexbox-items


You can use & > * + * as a selector to emulate a flex-gap (for a single line):

#box { display: flex; width: 230px; outline: 1px solid blue; }
.item { background: gray; width: 50px; height: 100px; }

/* ----- Flexbox gap: ----- */

#box > * + * {
  margin-left: 10px;
}

<div id='box'>
    <div class='item'></div>
    <div class='item'></div>
    <div class='item'></div>
    <div class='item'></div>
</div>


If you need to support flex wrapping, you can use a wrapper element:


.flex { display: flex; flex-wrap: wrap;  }
.box { background: gray; height: 100px; min-width: 100px; flex: auto; }
.flex-wrapper {outline: 1px solid red; }

/* ----- Flex gap 10px: ----- */

.flex > * {
  margin: 5px;
}
.flex {
  margin: -5px;
}
.flex-wrapper {
  width: 400px; /* optional */
  overflow: hidden; /* optional */
}



<div class='flex-wrapper'>
  <div class='flex'>
    <div class='box'></div>
    <div class='box'></div>
    <div class='box'></div>
    <div class='box'></div>
    <div class='box'></div>
  </div>
</div>




================================================================================
